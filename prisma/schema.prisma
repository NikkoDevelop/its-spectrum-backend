generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  login   String   @unique
  email   String   @unique
  profile Profile?
  // resume  Resume[]
  // posts
  // projects
  // messenger
  // notificatons
}

model Profile {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  name        String?
  surname     String?
  sex         UserSex?
  logo        Image?
  phone       String?
  city        String?
  status      String?
  description String?
}

// <========== RESUME ==========> //

// model Resume {
//   id             Int                 @id @default(autoincrement())
//   user           User                @relation(fields: [userId], references: [id])
//   userId         Int
//   nationality    String?
//   moving         ResumeMoving?
//   businessTrip   ResumeBusinessTrip?
//   position       ResumePosition?
//   expirience     ResumeExpirience[]
//   education      ResumeEducation[]
//   skills         ResumeSkill?
//   additionalInfo String?
// }

// model ResumePosition {
//   id              Int                 @id @default(autoincrement())
//   resume          Resume              @relation(fields: [resumeId], references: [id])
//   resumeId        Int                 @unique
//   title           String?
//   specializations String[]
//   employment      ResumeEmploymment[]
//   schedule        ResumeSchedule[]
//   salary          Int?
// }

// model ResumeExpirience {
//   id          Int       @id @default(autoincrement())
//   resume      Resume    @relation(fields: [resumeId], references: [id])
//   resumeId    Int       @unique
//   startDate   DateTime
//   endDate     DateTime?
//   company     String?
//   site        String?
//   position    String?
//   description String?
// }

// model ResumeEducation {
//   id             Int     @id @default(autoincrement())
//   resume         Resume  @relation(fields: [resumeId], references: [id])
//   resumeId       Int     @unique
//   endDate        Int?
//   degree         String?
//   institution    String?
//   specialization String?
// }

// model ResumeSkill {
//   id         Int      @id @default(autoincrement())
//   resume     Resume   @relation(fields: [resumeId], references: [id])
//   resumeId   Int      @unique
//   launguuage String[]
//   skills     String[]
// }

// <========== ====== ==========> //

// <========== VACANCY ==========> //

// <========== ======= ==========> //

// <========== COMPANY ==========> //

// <========== ======= ==========> //

// <========== TEST ==========> //

// <========== ==== ==========> //

// <========== POST ==========> //

// <========== ==== ==========> //

// <========== PROJECT ==========> //

// <========== ======= ==========> //

// <========== MESSENGER ==========> //

// <========== ========= ==========> //

// <========== NOTIFICATION ==========> //

// <========== ============ ==========> //

model Image {
  id        Int     @id @default(autoincrement())
  link      String  @unique
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int     @unique
}

enum UserSex {
  male
  female
}

enum ResumeMoving {
  yes
  no
  maybe
}

enum ResumeBusinessTrip {
  yes
  no
  maybe
}

enum ResumeEmploymment {
  full
  part
  project
}

enum ResumeSchedule {
  full
  hybrid
  flex
  remote
}
